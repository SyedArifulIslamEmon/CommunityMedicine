@model CommunityMedicine.Models.Medicine

@{
    ViewBag.Title = "Create";
}

<h2>Medicine Entry Form</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Medicine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GenericName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GenericName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GenericName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MeasurementUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MeasurementUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementUnit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label for="Power" class="col-sm-2 control-label">Select Unit</label>
            <div class="col-sm-10">
                <select class="form-control" id="Power" name="Power">
                    <option value="" selected>Select Unit</option>

                    @foreach (var Item in ViewBag.MeasurementUnit)
                    {
                        <option value="@Item.Name">@Item.Name</option>
                    }
                </select>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
